plugins {
    id 'com.jamesward.atomgradleplugin' version '0.0.2'
    id 'org.springframework.boot' version '1.5.2.RELEASE'
}

apply plugin: 'java'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-devtools:1.5.2.RELEASE'
}

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

atom {
    filesToOpen = ['README.md']
    packages = ['heroku-tools']
}

import org.gradle.internal.os.OperatingSystem

task devClasses(type: Exec) {
    if (OperatingSystem.current().isWindows())
        commandLine 'gradlew', '-t', 'classes'
    else
        commandLine './gradlew', '-t', 'classes'
}

task devBootRun(type: Exec) {
    if (OperatingSystem.current().isWindows())
        commandLine 'gradlew', 'bootRun'
    else
        commandLine './gradlew', 'bootRun'
}

import java.util.concurrent.*

task dev {
    doLast {
        def devClassesFuture = Executors.newSingleThreadExecutor().submit({ devClasses.execute() } as Callable)
        def devBootRunFuture = Executors.newSingleThreadExecutor().submit({ devBootRun.execute() } as Callable)
        devClassesFuture?.get()
        devBootRunFuture?.get()
    }
}

tasks.dev.dependsOn tasks.atom

task stage {
    dependsOn build
}

defaultTasks 'dev'
